'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createHook = createHook;
exports.addHook = addHook;
exports.sortBefore = sortBefore;
exports.sortAfter = sortAfter;
function hookSort(a, b) {
  var highestFirst = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

  var direction = highestFirst ? -1 : 1;

  if (a.priority > b.priority) {
    return 1 * direction;
  } else if (a.priority < b.priority) {
    return -1 * direction;
  } else {
    if (a._position > b._position) {
      return 1 * direction;
    } else {
      return -1 * direction;
    }
  }

  return 0;
}

function createHook(id) {
  var type = arguments.length <= 1 || arguments[1] === undefined ? 'before' : arguments[1];
  var func = arguments[2];
  var priority = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];

  var hook = {
    func: func,
    id: id,
    priority: priority,
    type: type
  };

  return hook;
}

function addHook(hook, source) {
  switch (hook.type) {
    case 'before':
      hook.before._position = source.hooks.before.length + 1;
      source.hooks.before.push(hook.func);
      break;
    case 'after':
      hook.after._position = source.hooks.after.length + 1;
      source.hooks.after.push(hook.func);
      break;
    case 'error':
      hook.error._position = source.hooks.error.length + 1;
      source.hooks.error.push(hook.func);
      break;
  }
}

function sortBefore(a, b) {
  return hookSort(a, b);
}

function sortAfter(a, b) {
  return hookSort(a, b, false);
}